/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectoVentana;

import proyecto.Coalicion;
import proyecto.EleccionCirc;
import proyecto.FormacionPolitica;
import proyecto.ItemTablaVotos;
import proyecto.TablaEscanos;
import proyecto.TablaVotos;
import java.io.BufferedInputStream;
import java.io.BufferedWriter;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import proyecto.Circunscripcion;
import proyecto.Eleccion;
import proyecto.ItemTablaEscanos;
import proyecto.PartidoPolitico;

/**
 *
 * @author ZHONG HAO LIN CHEN, ADRIAN DAVID MORILLAS MARCO, CLARA EUGENIA PALOMARES CALVO
 */
public class jfEleccion extends javax.swing.JFrame {
    
    ArrayList<Circunscripcion> listCirc;
    Vector datosCirc = new Vector();
    Vector datosSiglas = new Vector();
    Vector datosVE = new Vector();
    
    DefaultTableModel tmodelCirc = new DefaultTableModel();
    DefaultTableModel tmodelSiglas = new DefaultTableModel();
    
    DefaultTableModel tmodelVE = new DefaultTableModel();
    
    EleccionCirc elecCir;
    FormacionPolitica forma;
    //EleccionCircuns elecCir = new EleccionCircuns();
    private ArrayList<FormacionPolitica> listFormaciones;
    ArrayList<PartidoPolitico> listpartidos;
    
    ArrayList<Eleccion> listElec;
    
    private TablaVotos tv  = new TablaVotos(); 
    private TablaEscanos te = new TablaEscanos();

    /**
     * Creates new form jfEleccion
     */
    public jfEleccion() {
        initComponents();
        
        //Centrar la ventana
        this.setLocationRelativeTo(null);
        
        listCirc = new ArrayList<Circunscripcion>(); //Creamos una nueva lista de partidos
        listpartidos = new ArrayList<PartidoPolitico>();
        
        listFormaciones = new ArrayList<FormacionPolitica>();
        
        //Tabla de circunscripciones
        tmodelCirc.addColumn("Nombre");
        tmodelCirc.addColumn("Poblacion");
        tmodelCirc.addColumn("Esannos");       
        
        //Tabla de Partidos politicos
        tmodelSiglas.addColumn("Nombre"); 
        tmodelSiglas.addColumn("Siglas"); 
        tmodelSiglas.addColumn("Logo"); 
        
        //Tabla de votos y escaños
        tmodelVE.addColumn("Circunscripcion");
        tmodelVE.addColumn("Siglas Partido");
        tmodelVE.addColumn("Votos");
        tmodelVE.addColumn("Escaños");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButtonCargarLista = new javax.swing.JButton();
        jButtonSalir = new javax.swing.JButton();
        jButtonSimularResultados = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableCirc = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableSiglas = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableVE = new javax.swing.JTable();
        jButtonGuardarSimulacion = new javax.swing.JButton();
        jButtonCargarSimulacion = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldNomFicheroCirc = new javax.swing.JTextField();
        jTextFieldNomFicheroCoa = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldFicheroEleccCirc = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButtonElecciones = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(200, 200, 240));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Elecciones Circunscripción");
        jLabel1.setPreferredSize(new java.awt.Dimension(126, 16));

        jButtonCargarLista.setText("Cargar lista de formaciones");
        jButtonCargarLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCargarListaActionPerformed(evt);
            }
        });

        jButtonSalir.setText("Salir");
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });

        jButtonSimularResultados.setText("Simular y calcular resultados de circunscripción seleccionada");
        jButtonSimularResultados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSimularResultadosActionPerformed(evt);
            }
        });

        jButton1.setText("Cargar lista de circunscripciones");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTableCirc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nombre", "Poblacion", "Escaños"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableCirc);

        jTableSiglas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nombre", "Siglas", "Logo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTableSiglas);

        jTableVE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Circunscripción", "Siglas Partido", "Votos", "Escaños"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableVE);

        jButtonGuardarSimulacion.setText("Guadar simulación");
        jButtonGuardarSimulacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarSimulacionActionPerformed(evt);
            }
        });

        jButtonCargarSimulacion.setText("Cargar simulación");
        jButtonCargarSimulacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCargarSimulacionActionPerformed(evt);
            }
        });

        jLabel2.setText("Nombre del fichero de circunscrpciones");

        jTextFieldNomFicheroCirc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNomFicheroCircActionPerformed(evt);
            }
        });

        jTextFieldNomFicheroCoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNomFicheroCoaActionPerformed(evt);
            }
        });

        jLabel3.setText("Nombre del fichero de partidos políticos");

        jTextFieldFicheroEleccCirc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldFicheroEleccCircActionPerformed(evt);
            }
        });

        jLabel4.setText("Nombre fichero de simulación");

        jButtonElecciones.setText("Elecciones");
        jButtonElecciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEleccionesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jTextFieldNomFicheroCirc)))))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButtonCargarSimulacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonGuardarSimulacion, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextFieldFicheroEleccCirc)))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonCargarLista, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextFieldNomFicheroCoa))
                                .addGap(0, 342, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jButtonElecciones)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jButtonSalir))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jButtonSimularResultados)
                                                .addGap(102, 102, 102)))
                                        .addGap(34, 34, 34))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap())))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jTextFieldNomFicheroCirc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldNomFicheroCoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonCargarLista))
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jButtonSimularResultados)
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonGuardarSimulacion))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonCargarSimulacion)
                            .addComponent(jTextFieldFicheroEleccCirc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonElecciones))))
                .addGap(255, 255, 255))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCargarListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCargarListaActionPerformed
        this.CargarListaPartidos();
    }//GEN-LAST:event_jButtonCargarListaActionPerformed

    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jButtonSalirActionPerformed

    private void jButtonSimularResultadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSimularResultadosActionPerformed
        String nombreSeleccionado = "";  //String incializado a vacio
        nombreSeleccionado = this.jTableCirc.getValueAt(jTableCirc.getSelectedRow(),0).toString();
        int poblacionSeleccionado;  //String incializado a vacio
        poblacionSeleccionado = Integer.parseInt((String) this.jTableCirc.getValueAt(jTableCirc.getSelectedRow(),1)); //Al String anterior le asignamos las siglas del partido que hemos seleccionado y creamos su lista
        int escanosSeleccionado;
        escanosSeleccionado = Integer.parseInt((String) this.jTableCirc.getValueAt(jTableCirc.getSelectedRow(),2));
                
        Eleccion e = new Eleccion("Eleccion de la circunscripcion seleccionada", escanosSeleccionado);
        
        
        //* ZONA DE PRUEBA DEL SISTEMA D'HONDT
        e.addCircunscripcion(nombreSeleccionado, poblacionSeleccionado, escanosSeleccionado);
        this.tv = new TablaVotos();  
        
        double poblacion = poblacionSeleccionado;
        for(int i = 0; i < this.listpartidos.size(); i++){
            //Aqui en cada iteracion se le resta un valor aleatorio dentro del rango de la poblacion para asignar votos a los partidos
            double auxPob = poblacion - Math.random()*poblacion+1;
            double auxPob2 = poblacion - auxPob;
            tv.addItem(this.listpartidos.get(i).getSiglas(), (int) auxPob);
            poblacion = auxPob2;   
        }  
       
        this.te = e.getCircuns().get(0).CalcularResultado(tv); 
        
        e.getCircuns().get(0).ImprimirTablaEscanos();        
        //e.ImprimirMayorias();   
        
        for(int i = 0; i < this.listpartidos.size(); i++){
            datosVE = new Vector();       
            datosVE.addElement(nombreSeleccionado);    
            datosVE.addElement(this.listpartidos.get(i).getSiglas());

            datosVE.addElement(tv.getItems().get(i).getVotos());     //Para votos   
            datosVE.addElement(te.getItems().get(i).getEscanos());   //Para escanos
                  
            tmodelVE.addRow(datosVE);
            jTableVE.setModel(tmodelVE);        
        }
    }//GEN-LAST:event_jButtonSimularResultadosActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.LeerArchivoListaCirc();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonCargarSimulacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCargarSimulacionActionPerformed
        this.LeerArchivoElec();
    }//GEN-LAST:event_jButtonCargarSimulacionActionPerformed

    private void jTextFieldNomFicheroCoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNomFicheroCoaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNomFicheroCoaActionPerformed

    private void jTextFieldNomFicheroCircActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNomFicheroCircActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNomFicheroCircActionPerformed

    private void jTextFieldFicheroEleccCircActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldFicheroEleccCircActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldFicheroEleccCircActionPerformed

    private void jButtonGuardarSimulacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarSimulacionActionPerformed
        this.GuardarElec();
    }//GEN-LAST:event_jButtonGuardarSimulacionActionPerformed

    private void jButtonEleccionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEleccionesActionPerformed
        jfElecciones objElecciones = new jfElecciones();
        objElecciones.setVisible(true);
    }//GEN-LAST:event_jButtonEleccionesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jfEleccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jfEleccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jfEleccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jfEleccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jfEleccion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonCargarLista;
    private javax.swing.JButton jButtonCargarSimulacion;
    private javax.swing.JButton jButtonElecciones;
    private javax.swing.JButton jButtonGuardarSimulacion;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JButton jButtonSimularResultados;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableCirc;
    private javax.swing.JTable jTableSiglas;
    private javax.swing.JTable jTableVE;
    private javax.swing.JTextField jTextFieldFicheroEleccCirc;
    private javax.swing.JTextField jTextFieldNomFicheroCirc;
    private javax.swing.JTextField jTextFieldNomFicheroCoa;
    // End of variables declaration//GEN-END:variables

    private void LeerArchivoListaCirc() {
        try 
        {
            String nomArch = jTextFieldNomFicheroCirc.getText();
            FileInputStream fis = new FileInputStream(nomArch); 
            BufferedInputStream bis = new BufferedInputStream(fis); 
            DataInputStream dis = null; 
            
            //Inicializamos las cadenas en vacio
            dis = new DataInputStream(bis); 
            String linea = "";
            String strNombre = "";
            String strPoblacion = "";
            String strEscannos = "";
            Circunscripcion Circ;
            
            //Bucle para recorrer por linea del txt de la lista de partidos politicos
            while ((linea = dis.readLine()) != null ) 
            {                 
                strNombre = linea.substring(0, linea.indexOf(";"));
                linea = linea.substring(linea.indexOf(";")+ 1, linea.length());
                
                strPoblacion = linea.substring(0, linea.indexOf(";"));
                
                linea = linea.substring(linea.indexOf(";")+ 1, linea.length());
                strEscannos = linea.substring(0, linea.indexOf(";"));
                
                //Llenando la lista de los partidos politicos
                Circ = new Circunscripcion();             
             
                Circ.setNombre(strNombre);
                Circ.setPoblacion(Integer.valueOf(strPoblacion));
                Circ.setEscannos(Integer.valueOf(strEscannos));
             
                this.listCirc.add(Circ);
                
                //Llenado de la tabla
                datosCirc = new Vector();
                datosCirc.addElement(strNombre);
                datosCirc.addElement(strPoblacion);
                datosCirc.addElement(strEscannos);

                tmodelCirc.addRow(datosCirc);
                jTableCirc.setModel(tmodelCirc);
                               
                //Escribirlo en consola
                System.out.print(" Nombre:"+strNombre);
                System.out.print(" Poblacion:"+strPoblacion);
                System.out.println(" Escaños:"+strEscannos);   
           }            
            //Contador de partidos
            System.out.println("Cantidad de circunscripcion " + listCirc.size());
               
        }
        catch(IOException e)
        {
            System.out.println("Error en la lectura del archivo");//Mensaje de error de lectura
        }
       
    }

    private void CargarListaPartidos() {
    try 
        {
            //Directorio de donde queremos leer el archivo
            String nomArch = jTextFieldNomFicheroCoa.getText();
            FileInputStream fis = new FileInputStream(nomArch); 
            BufferedInputStream bis = new BufferedInputStream(fis); 
            DataInputStream dis = null; 
            
            //Inicializamos las cadenas en vacio
            dis = new DataInputStream(bis); 
            String linea = "";
            String strNombreC = "";
            String strSiglasC = "";
            String strLogoC = "";
            PartidoPolitico fpart;
            ArrayList<PartidoPolitico> listPartPoli = new ArrayList();
            
            //Bucle para recorrer por linea del txt de la lista de partidos politicos
            while ((linea = dis.readLine()) != null ) 
            {                 
                strNombreC = linea.substring(0, linea.indexOf(";"));
                linea = linea.substring(linea.indexOf(";")+ 1, linea.length());
                
                strSiglasC = linea.substring(0, linea.indexOf(";"));
                
                linea = linea.substring(linea.indexOf(";")+ 1, linea.length());
                strLogoC = linea.substring(0, linea.indexOf(";"));
                            
                //Llenando los parametros de la coalicion y la lista de coaliciones
                fpart = new PartidoPolitico();
             
                fpart.setNombre(strNombreC);
                fpart.setSiglas(strSiglasC);
                fpart.setLogo(strLogoC);
                //A la lista de partidos le agrego los partidos creados
                this.listpartidos.add(fpart);                
                
                //Llenado de la tabla
                datosSiglas = new Vector();
                datosSiglas.addElement(strNombreC);
                datosSiglas.addElement(strSiglasC);
                datosSiglas.addElement(strLogoC);

                tmodelSiglas.addRow(datosSiglas);
                jTableSiglas.setModel(tmodelSiglas);
                
                //Escribirlo en consola
                System.out.print(" Nombre formacion:"+strNombreC);
                System.out.print(" Siglas formacion:"+strSiglasC);
                System.out.println(" Logo formacion:"+strLogoC);
           }            
            //Contador de partidos
            System.out.println("Cantidad partidos " + listpartidos.size());
               
        }
        catch(IOException e)
        {
            System.out.println("Error en la lectura del archivo");//Mensaje de error de lectura
        }
    }

    private void GuardarElec() {
        String nombreSeleccionado = "";  //String incializado a vacio
        nombreSeleccionado = this.jTableCirc.getValueAt(jTableCirc.getSelectedRow(),0).toString();
        int poblacionSeleccionado;  //String incializado a vacio
        poblacionSeleccionado = Integer.parseInt((String) this.jTableCirc.getValueAt(jTableCirc.getSelectedRow(),1)); //Al String anterior le asignamos las siglas del partido que hemos seleccionado y creamos su lista
        int escanosSeleccionado;
        escanosSeleccionado = Integer.parseInt((String) this.jTableCirc.getValueAt(jTableCirc.getSelectedRow(),2));
        
        try {
            String nomArch = jTextFieldFicheroEleccCirc.getText();           
            //Aqui asignamos donde queremos guardar el fichero txt
            BufferedWriter out = new BufferedWriter(new FileWriter(nomArch));

            for(int i = 0; i < this.listpartidos.size(); i++){   
                out.write(nombreSeleccionado + ";");     

                out.write(this.listpartidos.get(i).getSiglas()+ ";");
            
                out.write(this.tv.getItems().get(i).getVotos()+ ";");     //Para votos   
 
                out.write(this.te.getItems().get(i).getEscanos() + ";");       //Para escanos     
                
                //Salto de linea
                out.write(System.getProperty("line.separator"));
            }
 
            out.close();
        } catch (IOException e) {}
    }

    private void LeerArchivoElec() {
        try 
        {
            String nomArch = jTextFieldFicheroEleccCirc.getText();
            FileInputStream fis = new FileInputStream(nomArch); 
            BufferedInputStream bis = new BufferedInputStream(fis); 
            DataInputStream dis = null; 
            
            //Inicializamos las cadenas en vacio
            dis = new DataInputStream(bis); 
            String linea = "";
            String strCirc = "";
            String strSiglas = "";
            String strVotos = "";
            String strEscanos = "";
            
            while ((linea = dis.readLine()) != null ) 
            {     
                strCirc = linea.substring(0, linea.indexOf(";"));               
                linea = linea.substring(linea.indexOf(";")+ 1, linea.length());
                strSiglas = linea.substring(0, linea.indexOf(";"));               
                linea = linea.substring(linea.indexOf(";")+ 1, linea.length());
                strVotos = linea.substring(0, linea.indexOf(";"));
                linea = linea.substring(linea.indexOf(";")+ 1, linea.length());
                strEscanos = linea.substring(0, linea.indexOf(";"));
                               
                //Llenado de la tabla
                datosVE = new Vector();
                datosVE.addElement(strCirc);
                datosVE.addElement(strSiglas);
                datosVE.addElement(strVotos);
                datosVE.addElement(strEscanos);

                tmodelVE.addRow(datosVE);
                jTableVE.setModel(tmodelVE);                                      
           }                          
        }
        catch(IOException e)
        {
            System.out.println("Error en la lectura del archivo");//Mensaje de error de lectura
        }
    }
}
