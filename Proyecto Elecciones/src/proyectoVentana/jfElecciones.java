/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectoVentana;
import java.util.ArrayList;
import java.io.BufferedInputStream;
import java.io.DataInputStream;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.Scanner;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import proyecto.Eleccion;
import proyecto.EleccionCirc;        
import proyecto.Circunscripcion;
import proyecto.Historico;
import proyecto.Militante;
import proyecto.PartidoPolitico;
import proyecto.TablaEscanos;
import proyecto.TablaVotos;

/**
 *
 * @author ZHONG HAO LIN CHEN, ADRIAN DAVID MORILLAS MARCO, CLARA EUGENIA PALOMARES CALVO
 */
public class jfElecciones extends javax.swing.JFrame {
    private ArrayList<EleccionCirc> listCirc;
    private Vector datosCirc = new Vector();
    //private Vector datosVEC = new Vector();
    private Vector datosVE = new Vector();
    
    private Vector datosSiglas = new Vector();
    
    private Vector datosMili = new Vector();
    private Vector vElegidos = new Vector();

    DefaultTableModel tmodelCirc = new DefaultTableModel();    
    //DefaultTableModel tmodelVEC = new DefaultTableModel();
    DefaultTableModel tmodelVE = new DefaultTableModel();
    
    DefaultTableModel tmodelSiglas = new DefaultTableModel();
    
    DefaultTableModel tmodelArchivos= new DefaultTableModel();
    DefaultTableModel tmodelSelectos= new DefaultTableModel();
    private TablaVotos tv  = new TablaVotos(); 
    private TablaEscanos te = new TablaEscanos();
    
    private TablaVotos resultado_total_votos;
    private TablaEscanos resultado_total_escanos;
    private int totalEscanos=0;
    ArrayList<PartidoPolitico> listpartidos;
    ArrayList<Militante> listMili;
    
    Eleccion e = new Eleccion();
       
    /**
     * Creates new form jfELecciones
     */
    public jfElecciones() {
        initComponents();
        
        //Centrar la ventana
        this.setLocationRelativeTo(null);
        
        listCirc = new ArrayList<EleccionCirc>(); 
        listpartidos = new ArrayList<PartidoPolitico>();//Creamos una nueva lista de partidos
        
        //Tabla de circunscripciones
        tmodelCirc.addColumn("Nombre");
        tmodelCirc.addColumn("Poblacion");
        tmodelCirc.addColumn("Esannos"); 
        
        /*//Tabla de votos y escaños de circunscripcion
        tmodelVEC.addColumn("Circunscripcion");
        tmodelVEC.addColumn("Siglas Partido");
        tmodelVEC.addColumn("Votos");
        tmodelVEC.addColumn("Escaños");
        
        //Tabla de votos y escaños de elecciones
        tmodelVE.addColumn("Siglas Partido");
        tmodelVE.addColumn("Votos");
        tmodelVE.addColumn("Escaños");
        */
        
        //Tabla de Partidos politicos
        tmodelSiglas.addColumn("Nombre"); 
        tmodelSiglas.addColumn("Siglas"); 
        tmodelSiglas.addColumn("Logo"); 
        
        //Tabla de archivos
        tmodelArchivos.addColumn("Archivos");
        
        //Tabla de elegidos
        tmodelSelectos.addColumn("Nombre");
        tmodelSelectos.addColumn("Apellidos");
        tmodelSelectos.addColumn("Siglas Partido");
        tmodelSelectos.addColumn("Circunscripcion");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        label1 = new java.awt.Label();
        jScrollPane1 = new javax.swing.JScrollPane();
        jCircunscripciones = new javax.swing.JTable();
        jTextFieldNomFicheroCirc = new java.awt.TextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableElegidos = new javax.swing.JTable();
        jButtonSalir = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButtonSimularResultados = new javax.swing.JButton();
        jButtonCargarLista = new javax.swing.JButton();
        jTextFieldNomFicheroCoa = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableSiglas = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaTablaV = new javax.swing.JTextArea();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextAreaTablaE = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextAreaTablaMayorias = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTableFicherosListas = new javax.swing.JTable();
        label2 = new java.awt.Label();
        jTextFieldArchivoMilitantes = new javax.swing.JTextField();
        jButtonAnadirLista = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTextAreaHistorico = new javax.swing.JTextArea();
        jButtonconsultar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(150, 70, 153));

        label1.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        label1.setText("Elecciones ");

        jCircunscripciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Circunscripción", "Población", "Escanos"
            }
        ));
        jScrollPane1.setViewportView(jCircunscripciones);

        jTextFieldNomFicheroCirc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNomFicheroCircActionPerformed(evt);
            }
        });

        jTableElegidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nombre", "Apellidos", "Siglas Partido", "Circunscripcion"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTableElegidos);

        jButtonSalir.setText("Salir");
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });

        jButton1.setText("Cargar lista de circunscripciones");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButtonSimularResultados.setText("Imprimir tablas glabales votos,escaños y listas electos");
        jButtonSimularResultados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSimularResultadosActionPerformed(evt);
            }
        });

        jButtonCargarLista.setText("Cargar lista de formaciones");
        jButtonCargarLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCargarListaActionPerformed(evt);
            }
        });

        jTextFieldNomFicheroCoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNomFicheroCoaActionPerformed(evt);
            }
        });

        jTableSiglas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nombre", "Siglas", "Logo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTableSiglas);

        jLabel2.setText("Nombre del fichero de circunscrpciones");

        jLabel3.setText("Nombre del fichero de partidos políticos");

        jTextAreaTablaV.setColumns(20);
        jTextAreaTablaV.setRows(5);
        jScrollPane2.setViewportView(jTextAreaTablaV);

        jTextAreaTablaE.setColumns(20);
        jTextAreaTablaE.setRows(5);
        jScrollPane6.setViewportView(jTextAreaTablaE);

        jLabel1.setText("Tabla globales votos");

        jLabel4.setText("Tabla globales escaños");

        jTextAreaTablaMayorias.setColumns(20);
        jTextAreaTablaMayorias.setRows(5);
        jScrollPane7.setViewportView(jTextAreaTablaMayorias);

        jLabel5.setText("Mayorías");

        jTableFicherosListas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Listas"
            }
        ));
        jScrollPane5.setViewportView(jTableFicherosListas);

        label2.setText("Listas de militantes");

        jTextFieldArchivoMilitantes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldArchivoMilitantesActionPerformed(evt);
            }
        });

        jButtonAnadirLista.setText("Añadir Lista");
        jButtonAnadirLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnadirListaActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Histórico");

        jTextAreaHistorico.setColumns(20);
        jTextAreaHistorico.setRows(5);
        jScrollPane8.setViewportView(jTextAreaHistorico);

        jButtonconsultar.setText("Consultar resultados del partido seleccionado");
        jButtonconsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonconsultarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(509, 509, 509)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(142, 142, 142))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextFieldNomFicheroCirc, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(62, 62, 62)
                                .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldNomFicheroCoa)
                            .addComponent(jButtonCargarLista, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldArchivoMilitantes)
                            .addComponent(jButtonAnadirLista, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(61, 61, 61))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 546, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(365, 365, 365)
                                .addComponent(jLabel4))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButtonSimularResultados)
                                .addGap(44, 44, 44)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonconsultar)
                                .addContainerGap(63, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(20, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6)
                                .addGap(177, 177, 177))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(595, 595, 595)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButtonSalir)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5)
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldNomFicheroCoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonCargarLista))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(26, 26, 26)
                        .addComponent(jButtonSimularResultados)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldNomFicheroCirc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(label2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(242, 242, 242))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldArchivoMilitantes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonAnadirLista)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6)
                                .addGap(31, 31, 31)))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonconsultar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jButtonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(214, 214, 214))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 814, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.LeerArchivoListaCirc();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jButtonSalirActionPerformed

    private void jTextFieldNomFicheroCircActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNomFicheroCircActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNomFicheroCircActionPerformed

    private void jButtonSimularResultadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSimularResultadosActionPerformed
        this.e = new Eleccion();
        //System.out.println("Entramos en bucle");
        int escanos=0;
        //System.out.println(this.jCircunscripciones.getColumnCount());
        //System.out.println(this.jCircunscripciones.getRowCount());
        for(int i=0; i < this.jCircunscripciones.getRowCount();i++){
            //System.out.println("Iteracion "+i+" Del bucle");
            String nombreSeleccionado = "";  //String incializado a vacio
            nombreSeleccionado = this.jCircunscripciones.getValueAt(i,0).toString();
            int poblacionSeleccionado;  //String incializado a vacio
            poblacionSeleccionado = Integer.parseInt((String) this.jCircunscripciones.getValueAt(i,1)); //Al String anterior le asignamos las siglas del partido que hemos seleccionado y creamos su lista
            int escanosSeleccionado;
            escanosSeleccionado = Integer.parseInt((String) this.jCircunscripciones.getValueAt(i,2));
            e.addCircunscripcion(nombreSeleccionado,poblacionSeleccionado,escanosSeleccionado);     
            escanos += escanosSeleccionado;
            this.tv = new TablaVotos(); 
            double poblacion = poblacionSeleccionado;
            for(int j = 0; j < this.listpartidos.size(); j++){
                //Aqui en cada iteracion se le resta un valor aleatorio dentro del rango de la poblacion para asignar votos a los partidos
                double auxPob = poblacion - Math.random()*poblacion+1;
                double auxPob2 = poblacion - auxPob;
                tv.addItem(this.listpartidos.get(j).getSiglas(), (int) auxPob);
                poblacion = auxPob2;   
            }         
            //this.te = e.getCircuns().get(0).CalcularResultado(tv);          
            //e.getCircuns().get(0).ImprimirTablaEscanos();
        }    
        e.setEscanos(escanos);
        
        for(int j = 0; j < this.listpartidos.size(); j++){
            //System.out.println(j);
            Militante sec = new Militante("Protoito", "Perez", 50, "Banquero", 'H', "PP", 43, "Carnn.txt");   
            PartidoPolitico pal = new PartidoPolitico(this.listpartidos.get(j).getNombre(), this.listpartidos.get(j).getSiglas(), this.listpartidos.get(j).getLogo(), sec);
            
            //Lee el archivo de lista de militantes pedido en consola
            /*try {
                LeerArchivoMili();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(jfElecciones.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            //Recorre la lista de militantes y los añade al partido que está recorriendo el bucle j
            for(int m = 0; m < this.listMili.size(); m++){
                pal.addMilitantes(this.listMili.get(m));               
            }*/
            
            pal.CargarListasI(this.jTableFicherosListas.getValueAt(j, 0).toString());
            pal.ElaborarListas(e);
        } 
         
        e.rellenaTablas();       
        jTextAreaTablaV.setText(e.ImprimirTablaGlobalVotosI());
        jTextAreaTablaE.setText(e.ImprimirTablaGlobalEscanosI());
        //e.ImprimirTablaGlobalVotos();
        //e.ImprimirTablaGlobalEscanos();
        jTextAreaTablaMayorias.setText(e.ImprimirMayoriasI().get(0)+"\n"+e.ImprimirMayoriasI().get(1)+"\n"+
                e.ImprimirMayoriasI().get(2)+"\n"+e.ImprimirMayoriasI().get(3));
        System.out.println(e.getEscanos());
        
        for(int j=0;j<e.getCircuns().size();j++){
            String s=e.ImprimirListasElectosI().get(3).get(j).toString();
            for(int i=0;i<e.getEscanos();i++){
                //Por alguna razón no lo imprime
                vElegidos = new Vector();
                vElegidos.addElement(e.ImprimirListasElectosI().get(0).get(i));
                vElegidos.addElement(e.ImprimirListasElectosI().get(1).get(i));
                vElegidos.addElement(e.ImprimirListasElectosI().get(2).get(i));
                vElegidos.addElement(s);
                
                this.tmodelSelectos.addRow(vElegidos);
                this.jTableElegidos.setModel(this.tmodelSelectos);
                /*System.out.println("Iteracion: "+i+" Del bucle de añadir gente");
                this.jTableElegidos.setValueAt(e.ImprimirListasElectosI().get(0).get(i), i, 0);//Acceder al nombre del militante
                System.out.println("Agregado la militante nombre"+i);
                this.jTableElegidos.setValueAt(e.ImprimirListasElectosI().get(1).get(i), i, 1);//Acceder a los apellidos
                System.out.println("Agregado la militante apellido"+i);
                this.jTableElegidos.setValueAt(e.ImprimirListasElectosI().get(2).get(i), i, 2);//Acceder al partido
                System.out.println("Agregado la partido"+i);
                this.jTableElegidos.setValueAt(s, i, 3);//Acceder a la circunscripcion
                System.out.println("Agregado la circuns"+i);*/
            }
        }
        //e.ImprimirListasElectos();
        //e.ImprimirMayorias();       
        

        
    }//GEN-LAST:event_jButtonSimularResultadosActionPerformed

    private void jButtonCargarListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCargarListaActionPerformed
        this.CargarListaPartidos();
    }//GEN-LAST:event_jButtonCargarListaActionPerformed

    private void jTextFieldNomFicheroCoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNomFicheroCoaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNomFicheroCoaActionPerformed

    private void jButtonAnadirListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnadirListaActionPerformed
        String s = "";
        s = this.jTextFieldArchivoMilitantes.getText();
        datosMili = new Vector();
        datosMili.addElement(s);
        this.tmodelArchivos.addRow(datosMili);
        this.jTableFicherosListas.setModel(this.tmodelArchivos);
    }//GEN-LAST:event_jButtonAnadirListaActionPerformed

    private void jTextFieldArchivoMilitantesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldArchivoMilitantesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldArchivoMilitantesActionPerformed

    private void jButtonconsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonconsultarActionPerformed
        Historico h = new Historico();
        h.addEleccion(e);

        String nombreSeleccionado = "";  //String incializado a vacio
        nombreSeleccionado = this.jTableSiglas.getValueAt(jTableSiglas.getSelectedRow(),0).toString();
        String siglasSeleccionado = "";  //String incializado a vacio
        siglasSeleccionado = this.jTableSiglas.getValueAt(jTableSiglas.getSelectedRow(),1).toString();
        String logoSeleccionado = "";  //String incializado a vacio
        logoSeleccionado = this.jTableSiglas.getValueAt(jTableSiglas.getSelectedRow(),2).toString();
        PartidoPolitico pal = new PartidoPolitico(nombreSeleccionado, siglasSeleccionado, logoSeleccionado);

        h.ConsultarResultados(pal);
        jTextAreaHistorico.setText(h.ConsultarResultadosI(pal));
    }//GEN-LAST:event_jButtonconsultarActionPerformed
     
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jfElecciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jfElecciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jfElecciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jfElecciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jfElecciones().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonAnadirLista;
    private javax.swing.JButton jButtonCargarLista;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JButton jButtonSimularResultados;
    private javax.swing.JButton jButtonconsultar;
    private javax.swing.JTable jCircunscripciones;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTable jTableElegidos;
    private javax.swing.JTable jTableFicherosListas;
    private javax.swing.JTable jTableSiglas;
    private javax.swing.JTextArea jTextAreaHistorico;
    private javax.swing.JTextArea jTextAreaTablaE;
    private javax.swing.JTextArea jTextAreaTablaMayorias;
    private javax.swing.JTextArea jTextAreaTablaV;
    private javax.swing.JTextField jTextFieldArchivoMilitantes;
    private java.awt.TextField jTextFieldNomFicheroCirc;
    private javax.swing.JTextField jTextFieldNomFicheroCoa;
    private java.awt.Label label1;
    private java.awt.Label label2;
    // End of variables declaration//GEN-END:variables
   
    private void LeerArchivoListaCirc() {
        try 
        {
            String nomArch = jTextFieldNomFicheroCirc.getText();
            FileInputStream fis = new FileInputStream(nomArch); 
            BufferedInputStream bis = new BufferedInputStream(fis); 
            DataInputStream dis = null; 
            
            //Inicializamos las cadenas en vacio
            dis = new DataInputStream(bis); 
            String linea = "";
            String strNombre = "";
            String strPoblacion = "";
            String strEscannos = "";
            EleccionCirc Circ;
            Circunscripcion Circ2;
            
            //Bucle para recorrer por linea del txt de la lista de partidos politicos
            while ((linea = dis.readLine()) != null ) 
            {                 
                strNombre = linea.substring(0, linea.indexOf(";"));
                linea = linea.substring(linea.indexOf(";")+ 1, linea.length());
                
                strPoblacion = linea.substring(0, linea.indexOf(";"));
                
                linea = linea.substring(linea.indexOf(";")+ 1, linea.length());
                strEscannos = linea.substring(0, linea.indexOf(";"));
                
                //Llenando la lista de los partidos politicos
                Circ = new EleccionCirc();             
             
                Circ.setNombre(strNombre);
                Circ.setPoblacion(Integer.valueOf(strPoblacion));
                Circ.setEscanos(Integer.valueOf(strEscannos));
             
                this.listCirc.add(Circ);
                
                //Llenado de la tabla
                datosCirc = new Vector();
                datosCirc.addElement(strNombre);
                datosCirc.addElement(strPoblacion);
                datosCirc.addElement(strEscannos);
                
                tmodelCirc.addRow(datosCirc);
                jCircunscripciones.setModel(tmodelCirc);
                               
                //Escribirlo en consola
                System.out.print(" Nombre:"+strNombre);
                System.out.print(" Poblacion:"+strPoblacion);
                System.out.println(" Escaños:"+strEscannos);   
           }            
            //Contador de partidos
            System.out.println("Cantidad de circunscripcion " + listCirc.size());
               
        }
        catch(IOException e)
        {
            System.out.println("Error en la lectura del archivo");//Mensaje de error de lectura
        }
       
    }
   
    private void CargarListaPartidos() {
        try 
        {
            //Directorio de donde queremos leer el archivo
            String nomArch = jTextFieldNomFicheroCoa.getText();
            FileInputStream fis = new FileInputStream(nomArch); 
            BufferedInputStream bis = new BufferedInputStream(fis); 
            DataInputStream dis = null; 
            
            //Inicializamos las cadenas en vacio
            dis = new DataInputStream(bis); 
            String linea = "";
            String strNombreC = "";
            String strSiglasC = "";
            String strLogoC = "";
            PartidoPolitico fpart;
            ArrayList<PartidoPolitico> listPartPoli = new ArrayList();
            
            //Bucle para recorrer por linea del txt de la lista de partidos politicos
            while ((linea = dis.readLine()) != null ) 
            {                 
                strNombreC = linea.substring(0, linea.indexOf(";"));
                linea = linea.substring(linea.indexOf(";")+ 1, linea.length());
                
                strSiglasC = linea.substring(0, linea.indexOf(";"));
                
                linea = linea.substring(linea.indexOf(";")+ 1, linea.length());
                strLogoC = linea.substring(0, linea.indexOf(";"));
                            
                //Llenando los parametros de la coalicion y la lista de coaliciones
                fpart = new PartidoPolitico();
             
                fpart.setNombre(strNombreC);
                fpart.setSiglas(strSiglasC);
                fpart.setLogo(strLogoC);
                //A la lista de partidos le agrego los partidos creados
                this.listpartidos.add(fpart);                
                
                //Llenado de la tabla
                datosSiglas = new Vector();
                datosSiglas.addElement(strNombreC);
                datosSiglas.addElement(strSiglasC);
                datosSiglas.addElement(strLogoC);

                tmodelSiglas.addRow(datosSiglas);
                jTableSiglas.setModel(tmodelSiglas);
                
                //Escribirlo en consola
                System.out.print(" Nombre formacion:"+strNombreC);
                System.out.print(" Siglas formacion:"+strSiglasC);
                System.out.println(" Logo formacion:"+strLogoC);
           }            
           //Contador de partidos
           System.out.println("Cantidad partidos " + listpartidos.size());
               
        }
        catch(IOException e)
        {
            System.out.println("Error en la lectura del archivo");//Mensaje de error de lectura
        }
    }
        
    /*private void LeerArchivoElec() {
        try 
        {
            String nomArch = jTextFieldFicheroEleccCirc.getText();
            FileInputStream fis = new FileInputStream(nomArch); 
            BufferedInputStream bis = new BufferedInputStream(fis); 
            DataInputStream dis = null; 
            
            //Inicializamos las cadenas en vacio
            dis = new DataInputStream(bis); 
            String linea = "";
            String strCirc = "";
            String strSiglas = "";
            String strVotos = "";
            String strEscanos = "";
            
            while ((linea = dis.readLine()) != null ) 
            {     
                strCirc = linea.substring(0, linea.indexOf(";"));               
                linea = linea.substring(linea.indexOf(";")+ 1, linea.length());
                strSiglas = linea.substring(0, linea.indexOf(";"));               
                linea = linea.substring(linea.indexOf(";")+ 1, linea.length());
                strVotos = linea.substring(0, linea.indexOf(";"));
                linea = linea.substring(linea.indexOf(";")+ 1, linea.length());
                strEscanos = linea.substring(0, linea.indexOf(";"));
                               
                //Llenado de la tabla
                datosVEC = new Vector();
                datosVEC.addElement(strCirc);
                datosVEC.addElement(strSiglas);
                datosVEC.addElement(strVotos);
                datosVEC.addElement(strEscanos);

                tmodelVEC.addRow(datosVEC);
                jTableVEC.setModel(tmodelVEC);                                      
           }                          
        }
        catch(IOException e)
        {
            System.out.println("Error en la lectura del archivo");//Mensaje de error de lectura
        }
    }*/
    
    /*
    private void LeerArchivoMili() throws ClassNotFoundException{
        try 
        {
            Scanner sca = new Scanner(System.in);
            System.out.println("Nombre del fichero de lista de militantes "+": ");
            String n = sca.next();            
            FileInputStream fis = new FileInputStream(n); 
            BufferedInputStream bis = new BufferedInputStream(fis); 
            DataInputStream dis = null; 
            
            dis = new DataInputStream(bis); 
            String linea = "";
            String strSoM = "";
            String strNombre = "";
            String strApellidos = "";
            String strEdad = "";
            String strProfesion = "";
            String strGenero = "";
            String strSiglas = "";
            String strEncuesta[] = new String[2];                     
            String strCuota = "";
            String strCarne = "";
            
            Militante mili;
            
            //Bucle para recorrer por linea del txt de la lista de Miembros militantes
            while ((linea = dis.readLine()) != null ) 
            {       
                strSoM = linea.substring(0, linea.indexOf(";"));
                linea = linea.substring(linea.indexOf(";")+ 1, linea.length());
                
                strNombre = linea.substring(0, linea.indexOf(";"));
                linea = linea.substring(linea.indexOf(";")+ 1, linea.length());
                
                strApellidos = linea.substring(0, linea.indexOf(";"));              
                linea = linea.substring(linea.indexOf(";")+ 1, linea.length());
                
                strEdad = linea.substring(0, linea.indexOf(";"));
                linea = linea.substring(linea.indexOf(";")+ 1, linea.length());
                
                strProfesion = linea.substring(0, linea.indexOf(";"));
                linea = linea.substring(linea.indexOf(";")+ 1, linea.length());
                
                strGenero = linea.substring(0, linea.indexOf(";"));
                linea = linea.substring(linea.indexOf(";")+ 1, linea.length());
                
                strSiglas = linea.substring(0, linea.indexOf(";"));
                linea = linea.substring(linea.indexOf(";")+ 1, linea.length());
                
                strEncuesta[0] = linea.substring(0, linea.indexOf(";"));
                linea = linea.substring(linea.indexOf(";")+ 1, linea.length());
                
                strEncuesta[1] = linea.substring(0, linea.indexOf(";"));
                linea = linea.substring(linea.indexOf(";")+ 1, linea.length());
                
                strCuota = linea.substring(0, linea.indexOf(";"));
                linea = linea.substring(linea.indexOf(";")+ 1, linea.length());
                
                strCarne = linea.substring(0, linea.indexOf(";"));
                
                mili = new Militante();
             
                mili.setTipo(strSoM);
                mili.setNombre(strNombre);
                mili.setApellidos(strApellidos);
                mili.setEdad(Integer.valueOf(strEdad));
                mili.setProfesion(strProfesion);
                mili.setGenero(strGenero.charAt(0));
                mili.setSiglas(strSiglas); 
                mili.setEncuestas(strEncuesta);
                mili.setCuota(Double.valueOf(strCuota));
                mili.setCarnet(strCarne);                
                
                this.listMili.add(mili);
                //listMiem.add(mili);
                    
                //Escribirlo en consola
                System.out.print(" Tipo de votante:"+strSoM);
                System.out.print(" Nombre:"+strNombre);
                System.out.print(" Apellidos:"+strApellidos); 
                System.out.print(" Edad:"+Integer.valueOf(strEdad));
                System.out.print(" Profesión:"+strProfesion);
                System.out.print(" Género:"+strGenero.charAt(0));
                System.out.print(" Siglas:"+strSiglas);
                System.out.print(" Pregunta 1:"+strEncuesta[0]);
                System.out.print(" Pregunta 2:"+strEncuesta[1]);
                System.out.print(" Cuota:"+Double.valueOf(strCuota));
                System.out.println(" Carnet:"+strCarne);
            }                        
            //Contador de militantes
            System.out.println("Cantidad Militantes " + this.listMili.size());                       
        }
        catch(IOException e)
        {
            System.out.println("Error en la lectura del archivo");
        }
    }*/
    
}
